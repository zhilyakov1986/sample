// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using TrackerEnabledDbContext;

    // AuthTokens
    [Table("AuthTokens", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class AuthToken: Entity
    {
        // AuthToken

        [Column(@"IdentifierKey", Order = 2, TypeName = "varbinary")]
        [MaxLength(64)]
        [Display(Name = "Identifier key")]
        public byte[] IdentifierKey { get; set; } // IdentifierKey (length: 64)

        [Column(@"Salt", Order = 3, TypeName = "varbinary")]
        [MaxLength(64)]
        [Display(Name = "Salt")]
        public byte[] Salt { get; set; } // Salt (length: 64)

        [Column(@"AuthUserId", Order = 4, TypeName = "int")]
        [Display(Name = "Auth user ID")]
        public int AuthUserId { get; set; } // AuthUserId

        [Column(@"AuthClientId", Order = 5, TypeName = "int")]
        [Display(Name = "Auth client ID")]
        public int AuthClientId { get; set; } // AuthClientId

        [Column(@"IssuedUtc", Order = 6, TypeName = "datetime")]
        [Display(Name = "Issued utc")]
        public System.DateTime IssuedUtc { get; set; } // IssuedUtc

        [Column(@"ExpiresUtc", Order = 7, TypeName = "datetime")]
        [Display(Name = "Expires utc")]
        public System.DateTime ExpiresUtc { get; set; } // ExpiresUtc

        [Column(@"Token", Order = 8, TypeName = "varchar(max)")]
        [Display(Name = "Token")]
        public string Token { get; set; } // Token

        // Foreign keys

        /// <summary>
        /// Parent AuthClient pointed by [AuthTokens].([AuthClientId]) (FK_AuthTokens_AuthClients)
        /// </summary>
        [ForeignKey("AuthClientId")] public AuthClient AuthClient { get; set; } // FK_AuthTokens_AuthClients

        /// <summary>
        /// Parent AuthUser pointed by [AuthTokens].([AuthUserId]) (FK_AuthTokens_AuthUsers)
        /// </summary>
        [ForeignKey("AuthUserId")] public AuthUser AuthUser { get; set; } // FK_AuthTokens_AuthUsers

        public AuthToken()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
