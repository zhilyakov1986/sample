// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using TrackerEnabledDbContext;

    // UserRoles
    [Table("UserRoles", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class UserRole: Entity
    {
        // UserRole

        [Column(@"Name", Order = 2, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        [Column(@"Description", Order = 3, TypeName = "varchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (length: 500)

        [Column(@"IsEditable", Order = 4, TypeName = "bit")]
        [Display(Name = "Is editable")]
        public bool IsEditable { get; set; } // IsEditable

        // Reverse navigation

        /// <summary>
        /// Child AuthUsers where [AuthUsers].[RoleId] point to this entity (FK_AuthUsers_UserRoles)
        /// </summary>
        public System.Collections.Generic.ICollection<AuthUser> AuthUsers { get; set; } // AuthUsers.FK_AuthUsers_UserRoles
        /// <summary>
        /// Child UserRoleClaims where [UserRoleClaims].[RoleId] point to this entity (FK_UserRoleClaims_UserRoles)
        /// </summary>
        public System.Collections.Generic.ICollection<UserRoleClaim> UserRoleClaims { get; set; } // UserRoleClaims.FK_UserRoleClaims_UserRoles

        public UserRole()
        {
            Description = "";
            IsEditable = true;
            UserRoleClaims = new System.Collections.Generic.List<UserRoleClaim>();
            AuthUsers = new System.Collections.Generic.List<AuthUser>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
