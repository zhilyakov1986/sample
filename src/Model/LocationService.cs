// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using TrackerEnabledDbContext;

    // LocationServices
    [Table("LocationServices", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class LocationService: Entity, IVersionable
    {
        // LocationService

        [Column(@"CustomerLocationId", Order = 2, TypeName = "int")]
        [Display(Name = "Customer location ID")]
        public int CustomerLocationId { get; set; } // CustomerLocationId

        [Column(@"ContractId", Order = 3, TypeName = "int")]
        [Display(Name = "Contract ID")]
        public int ContractId { get; set; } // ContractId

        [Column(@"GoodId", Order = 4, TypeName = "int")]
        [Display(Name = "Good ID")]
        public int GoodId { get; set; } // GoodId

        [Column(@"Quantity", Order = 5, TypeName = "int")]
        [Display(Name = "Quantity")]
        public int Quantity { get; set; } // Quantity

        [Column(@"Price", Order = 6, TypeName = "money")]
        [Display(Name = "Price")]
        public decimal Price { get; set; } // Price

        [Column(@"Archived", Order = 7, TypeName = "bit")]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
        [Column(@"Version", Order = 8, TypeName = "timestamp")]
        [MaxLength(8)]
        [Timestamp]
        [Display(Name = "Version")]
        public byte[] Version { get; set; } // Version (length: 8)

        [Column(@"ShortDescription", Order = 9, TypeName = "varchar")]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "Short description")]
        public string ShortDescription { get; set; } // ShortDescription (length: 250)

        [Column(@"LongDescription", Order = 10, TypeName = "varchar(max)")]
        [Display(Name = "Long description")]
        public string LongDescription { get; set; } // LongDescription

        // Foreign keys

        /// <summary>
        /// Parent Contract pointed by [LocationServices].([ContractId]) (FK_LocationServices_Contracts)
        /// </summary>
        [ForeignKey("ContractId")] public Contract Contract { get; set; } // FK_LocationServices_Contracts

        /// <summary>
        /// Parent CustomerLocation pointed by [LocationServices].([CustomerLocationId]) (FK_LocationServices_CustomerLocations)
        /// </summary>
        [ForeignKey("CustomerLocationId")] public CustomerLocation CustomerLocation { get; set; } // FK_LocationServices_CustomerLocations

        /// <summary>
        /// Parent Good pointed by [LocationServices].([GoodId]) (FK_LocationServices_Goods)
        /// </summary>
        [ForeignKey("GoodId")] public Good Good { get; set; } // FK_LocationServices_Goods

        public LocationService()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
